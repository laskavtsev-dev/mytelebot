#!/usr/bin/env bash
# File generated by pre-commit: https://pre-commit.com
# ID: 138fd403232d2ddd5efb44317e38bf03

# start templated
INSTALL_PYTHON=/usr/bin/python3
ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
# end templated

HERE="$(cd "$(dirname "$0")" && pwd)"
ARGS+=(--hook-dir "$HERE" -- "$@")

if [ -x "$INSTALL_PYTHON" ]; then
    exec "$INSTALL_PYTHON" -mpre_commit "${ARGS[@]}"
elif command -v pre-commit > /dev/null; then
    exec pre-commit "${ARGS[@]}"
else
    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1>&2
    exit 1
fi
#************************************************************************************************#
# Перевіряємо, чи включено скрипт за допомогою git config
ENABLE_GITLEAKS=$(git config --bool hooks.gitleaks)
if [ "$ENABLE_GITLEAKS" != "true" ]; then
  echo "Gitleaks hook is disabled. Enable it by running:"
  echo "git config --bool hooks.gitleaks true"
  exit 0
fi

# Визначаємо ось
detect_os() {
  if [ "$(uname)" = "Darwin" ]; then
    OS='Darwin'
  elif [ "$(uname)" = "Linux" ]; then
    OS='Linux'
  elif [ "$OS" = "Windows_NT" ]; then
    OS='Windows'
  else
    OS='Unknown'
  fi
}

# Визначаємо архітектуру
detect_arch() {
  case "$(uname -m)" in
   'x86_64')
      ARCH='x86_64'
      ;;
    'arm64')
      ARCH='arm64'
      ;;
    *)
      ARCH='Unknown'
      ;;
  esac
}

# Інсталюємо gitleaks
install_gitleaks() {
  detect_os
  detect_arch

  if [ "$OS" = "Unknown" ]; then
    echo "Unsupported OS: $OS"
    exit 1
  fi

  if [ "$OS" = "Windows" ]; then
    ARCH='x86_64'
  fi

  if [ "$ARCH" = "Unknown" ]; then
    echo "Unsupported architecture: $ARCH"
    exit 1
  fi

  case "$OS" in
    'Linux')
      if [ "$ARCH" = "x86_64" ]; then
        URL="https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64"
      elif [ "$ARCH" = "arm64" ]; then
        URL="https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-arm64"
      fi
      ;;
    'Darwin')
      if [ "$ARCH" = "x86_64" ]; then
        URL="https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-darwin-amd64"
      elif [ "$ARCH" = "arm64" ]; then
        URL="https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-darwin-arm64"
      fi
      ;;
    'Windows')
      URL="https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-windows-amd64.exe"
      ;;
  esac

   echo "Downloading gitleaks from $URL..."
  if [ "$OS" = "Windows" ]; then
    powershell -Command "
      \$client = new-object System.Net.WebClient;
      \$client.DownloadFile('$URL', 'gitleaks.exe');
      if (!(Test-Path -Path \$env:LOCALAPPDATA\gitleaks)) { New-Item -ItemType Directory -Path \$env:LOCALAPPDATA\gitleaks };
      Move-Item -Path gitleaks.exe -Destination \$env:LOCALAPPDATA\gitleaks\gitleaks.exe;
    "
  else
    curl -sSL $URL -o gitleaks
    chmod +x gitleaks
    sudo mv gitleaks /usr/local/bin/gitleaks
  fi
}

detect_os

#Перевіряємо, чи гітлікс інстальовано, та якщо ні - інсталюємо (основна процедура)
if [ "$OS" = "Windows" ]; then
  if ! powershell -Command "Test-Path -Path \$env:LOCALAPPDATA\gitleaks\gitleaks.exe" ; then
    echo "Gitleaks not found, installing..."
    install_gitleaks
  else
    echo "Gitleaks is already installed"
  fi
else
  if ! command -v gitleaks >/dev/null 2>&1; then
    echo "Gitleaks not found, installing..."
    install_gitleaks
  else
    echo "Gitleaks is already installed"
  fi
fi
